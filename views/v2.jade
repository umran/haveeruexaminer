extends layoutv2
block content
	div(class='container')
		div(class='input-group searchBar')
			input(type='text' ng-class='inputClass' placeholder='' ng-model='query' ng-keypress='toThaana($event)' value='{{query}}' ng-enter='getResults()' autofocus)
			div(class='input-group-btn')
				button(type='button' class='btn btn-primary' ng-click='getResults()')
					|<strong>Search</strong>
				button(type='button' class='btn btn-primary')
					span(class='glyphicon glyphicon-cog')
				button(type='button' class='btn btn-primary dropdown-toggle' data-toggle='dropdown' aria-haspopup='true' aria-expanded='false')
					|<strong>{{langSh}}</strong>	
					span(class='caret')
				ul(class='dropdown-menu')
					li
						a(href='' ng-click='setLang(0)')
							|English
					li(class='thaana')
						a(href='' ng-click='setLang(1)')
							|ދިވެހި
	div(ng-show='showPrimer')
		div(class='container')
			div(class='row')
				div(class='col-xs-12 col-md-12')
					div(class='alert alert-success alert-dismissible' role='alert')
						|<button type='button' class='close' data-dismiss='alert' aria-label='Close'><span aria-hidden='true'>&times;</span></button>
						//p()
							|<strong>Holà</strong>
						p()
							|This resource is an approximate cache of Haveeru Online, the online website of the oldest daily in the Maldives that has been recently forced to shutdown by the government. While documents indexed here are dated from <strong>1 May 2003</strong> to <strong>31 January 2016</strong>, we can't guarantee that the documents in our archive are a comprehensive list of all articles published within that period. As we have never had direct access to the documents when they were being hosted by Haveeru Online, we've had to rely on a heuristic algorithm to scrape articles from their website. Full source code for the program used to spider Haveeru Online is available <a href='https://github.com/umran/haveerucrawler'>here</a> 
						//p()
							|<strong>Advanced Search and API Coming Soon</strong>
						//p()
							|We're working on an extension that will allow a more fine tuned analysis on the data. The most immediate feature to that effect will be the implementation of a date filter. A RESTful API upon which 3rd party applications can leverage all our search capabilities is not too far from being pushed into production either
		div(class='container')
			div(class='row')
				div(class='col-xs-12 col-md-12')
					div(class='alert alert-info alert-dismissible' role='alert')
						|<button type='button' class='close' data-dismiss='alert' aria-label='Close'><span aria-hidden='true'>&times;</span></button>
						p
							|<strong>Query String Syntax</strong>
						p
							|The query string is parsed into a series of terms and operators. A term can be a single word — 'quick' or 'brown' — or a phrase, surrounded by double quotes — "quick brown" — which searches for all the words in the phrase, in the same order
						p
							|You may fine-tune your search by performing subqueries on specific fields. For example you might want to search for all articles containing the term 'protest' that was published in the year 2012. This query can be represented by the following expression: <strong>protest AND date:[2012-01-01 TO 2012-12-31]</strong>. All available fields and some operators are explained below. The full syntax reference is available <a href='https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-query-string-query.html#query-string-syntax'>here</a>
						p
							|<strong>r_title</strong>
							br
							|Matches queries on article titles. For example the expression <strong>r_title:(Nasheed OR Maumoon)</strong> matches documents whose tile contains either 'Nasheed' or 'Maumoon'
						p
							|<strong>r_fulltext</strong>
							br
							|Matches queries on the main body of articles. For example the expression <strong>r_fulltext:("Nasheed resigns")</strong> matches documents whose body contains the phrase 'Nasheed resigns'. Please note that phrase matching only works when the phrase is wrapped around double quotes (" "). Queries may also use wildcards. For example the subquery <strong>r_fulltext:(Yam*n)</strong> matches documents whose body contains any term beginning with 'Yam' and ending with 'n' (as denoted by the wildcard character * in between). The character ? may be used instead of * to match a single wildcard character instead of an unlimited number of characters. A subquery that matches a single wildcard character might look like this: <strong>r_fulltext:(Yam?n)</strong>
						p
							|<strong>r_byline</strong>
							br
							|Matches queries on article authors. For example the expression <strong>r_byline:(+Ahmed -Mohamed)</strong> matches documents whose byline includes the term 'Ahmed' (as specified by the + symbol), but does not include the term 'Mohamed' (as denoted by the - symbol)
						p
							|<strong>date</strong>
							br
							|Matches articles published within a specific date range. For example the expression <strong>date:[2012-01-01 TO 2012-12-31]</strong> matches articles published between the inclusive range 2012-01-01 - 2012-12-31 (as specified by the use of square brackets [ and ])
						p
							|<strong>indexed_date</strong>
							br
							|Matches articles indexed in our database within a specific date range. For example the expression <strong>date:{2012-01-01 TO 2012-12-31}</strong> matches articles published between the inclusive range 2012-01-01 - 2012-12-31 (as specified by the use of curly brackets { and }). Curly and square brackets can be combined
			//div(class='row')
				div(class='col-md-6 col-xs-12 centered')
					input(type='text' ng-class='inputClass' placeholder='' ng-model='query' ng-keypress='toThaana($event)' value='{{query}}' ng-enter='getResults()' autofocus)
			//div(class='row home-btn-group')
				div(class='col-md-6 col-xs-8 centered')
					div(class='btn-group' role='group')
						button(type='button' class='btn btn-primary' ng-click='getResults()')
							|<strong>Search</strong>
						button(type='button' class='btn btn-primary')
							span(class='glyphicon glyphicon-cog')
					div(class='btn-group btn-is-next')
						button(type='button' class='btn btn-link dropdown-toggle' data-toggle='dropdown' aria-haspopup='true' aria-expanded='false')
								|Language: <strong>{{lang}}</strong>	
								span(class='caret icon-is-next')
						ul(class='dropdown-menu')
							li
								a(href='' ng-click='setLang(0)')
									|English
							li(class='thaana')
								a(href='' ng-click='setLang(1)')
									|ދިވެހި
	
	// this expands upon submitting search to reveal results
	div(class='container' ng-show='showResults')
		div(class='row')
			div(class='col-xs-12 col-md-12')
				ul(class='media-list results')
					h4(class='header')
						|{{meta}}
					li(class='media {{result.lang}}' ng-repeat='result in results')
						div(class='media-body')
							h4(class='media-heading')
								a(href='' ng-click='fetchDoc(result.hash)')
									|{{result.title}}
							.post-meta-summary
								a(class='post-meta-link-author' href='#')
									|{{result.url}}
								span(class='post-meta-supplemental')
									span(class='text-warning' am-time-ago='result.date')
									span(class='text-warning')
										|<strong>{{result.byline}}</strong>
							p(class='result-body' ng-bind-html='result.excerpt | html')
				ul(class='pagination pagination-sm')
					li(ng-repeat='page in pages')
						a(href='' ng-click='getResults(page)')
							|{{page}}
	div(class='container' ng-show='showDoc')
		div(class='row')
			div(class='col-xs-12 col-md-12')
				div(class='{{document.lang}}')				
					h2(class='article-heading')
						|{{document.title}}
					.post-meta-summary
						a(class='post-meta-link-author' href='#')
							|{{document.url}}
						span(class='post-meta-supplemental')
							span(class='text-warning' am-time-ago='document.date')
							span(class='text-warning')
								|<strong>{{document.byline}}</strong>
					p(class='article-body' ng-bind-html='document.main | html')
			// display feed
			//div(class='col-xs-12 col-md-6' id='row2')
				div(class='feed pull-right' id='feed' ng-controller='feed')
					div(class='item {{item.lang}}' ng-repeat='item in items')
						div(class='post')
							div(class='panel panel-default')
								div(class='panel-body')
									h3(class='post-title {{item.lang}}')
										a(href='' ng-click='fetchDoc(item.hash)')
											|{{item.title}}
									p(class='post-body')
										|{{item.intro}}
									p(class='post-body' ng-bind-html='item.main | html')
								div(class='panel-heading')
									//.post-meta-avatar
										img(src='https://cdn-images-1.medium.com/fit/c/72/72/1*UZtp1fi_asudK3AaEwuniw.jpeg' class='profile-image avatar')
									.post-meta-summary
										a(class='post-meta-link-author' href='#')
											|{{item.url}}
										span(class='post-meta-supplemental')
											span(am-time-ago='item.date')
	