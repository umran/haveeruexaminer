extends layoutv2
block head
	nav(class='navbar navbar-default')
		div(class='container')
			div(class='navbar-header')
				button(type='button' class='navbar-toggle collapsed' data-toggle='collapse' data-target='#nav-collapse' aria-expanded='false')
					span(class='sr-only')
						|Expand Navigation Menu
					span(class='icon-bar')
					span(class='icon-bar')
					span(class='icon-bar')
				a(class='navbar-brand')
					|Haveeru Examiner
			div(class='collapse navbar-collapse' id='nav-collapse')
				ul(class='nav navbar-nav navbar-right')
					li
						a(href='#')
							span(class='octicon octicon-pulse')
							|	Analytics
					li
						a(href='/api/docs')
							span(class='octicon octicon-code')
							|	API
					li
						a(href='https://github.com/umran/haveerucrawler')
							span(class='octicon octicon-mark-github')
							|	Github
block content
	div(class='container')
		div(class='input-group searchBar')
			input(type='text' ng-class='inputClass' placeholder='' ng-model='query' ng-keypress='toThaana($event)' value='{{query}}' ng-enter='getResults()' autofocus)
			div(class='input-group-btn')
				button(type='button' class='btn btn-primary' ng-click='getResults()')
					|<strong>Search</strong>
				button(type='button' class='btn btn-primary')
					span(class='glyphicon glyphicon-cog')
				button(type='button' class='btn btn-primary dropdown-toggle' data-toggle='dropdown' aria-haspopup='true' aria-expanded='false')
					|<strong>{{langSh}}</strong>
					span(class='caret')
				ul(class='dropdown-menu')
					li
						a(href='' ng-click='setLang(0)')
							|English
					li(class='thaana')
						a(href='' ng-click='setLang(1)')
							|ދިވެހި

	div(ng-show='showError' ng-hide='hideError')
		div(class='container')
			div(class='row')
				div(class='col-xs-12 col-md-12')
					div(class='alert alert-danger alert-dismissible' role='alert')
						p(ng-bind-html='errorMsg | html')

	div(ng-show='showPrimer')
		div(class='container')
			div(class='row')
				div(class='col-xs-12 col-md-12')
					div(class='alert alert-success alert-dismissible' role='alert')
						|<button type='button' class='close' data-dismiss='alert' aria-label='Close'><span aria-hidden='true'>&times;</span></button>
						p()
							|This resource is an approximate cache of Haveeru Online, the online website of the oldest Maldivian daily that has been forced to shutdown. While documents indexed here are dated from <strong>1 May 2003</strong> to <strong>31 January 2016</strong>, we can't guarantee that our coverage of the documents are comprehensive. As we have never had direct access to the documents when they were being hosted by Haveeru Online, we have had to rely on a heuristic algorithm to scrape articles from their website. Full source code for the program used to spider Haveeru Online is available <a href='https://github.com/umran/haveerucrawler'>here</a>
		div(class='container')
			div(class='row')
				div(class='col-xs-12 col-md-12')
					div(class='alert alert-info alert-dismissible' role='alert')
						|<button type='button' class='close' data-dismiss='alert' aria-label='Close'><span aria-hidden='true'>&times;</span></button>
						p
							|<strong>Query String Syntax</strong>
						p
							|The query string is parsed into a series of terms and operators. A term can be a single word — 'quick' or 'brown' — or a phrase, surrounded by double quotes — "quick brown" — which searches for all the words in the phrase, in the same order
						p
							|You may fine-tune your search by performing subqueries on specific fields. For example you might want to search for all articles containing the term 'protest' that was published in the year 2012. This query can be represented by the following expression: <strong>protest AND date:[2012-01-01 TO 2012-12-31]</strong>. All available fields and some operators are explained below. The full syntax reference is available <a href='https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-query-string-query.html#query-string-syntax'>here</a>
						p
							|<strong>url</strong>
							br
							|Matches queries against article urls. For example the expression <strong>url:(haveeru.com.mv\/news\/50042)</strong> matches documents whose url contains any of the terms separated by forward slashes in the following expression: 'haveeru.com.mv/news/50042'. Notice that all forward slashes are escaped. This is because queries with unescaped forward slashes are interpreted as regular expressions. <strong>Please avoid using the suffix 'http://' in your queries as this messes up tokenization.</strong> Exact url matching without tokenization can be done by simply wrapping the escaped url string around double quotes " ".
						p
							|<strong>r_title</strong>
							br
							|Matches queries against article titles. For example the expression <strong>r_title:(Nasheed OR Maumoon)</strong> matches documents whose title contains either 'Nasheed' or 'Maumoon'
						p
							|<strong>r_intro</strong>
							br
							|Matches queries against the subheading of articles. For example the expression <strong>r_intro:("Nasheed resigns")</strong> matches documents whose subheading contains the phrase 'Nasheed resigns'. Please note that phrase matching only works when the phrase is wrapped inside double quotes " "
						p
							|<strong>fulltext</strong>
							br
							|Matches queries against the main body of articles. For example the subquery <strong>fulltext:(Yam*n)</strong> matches documents whose body contains any term beginning with 'Yam' and ending with 'n' (as denoted by the wildcard character * in between). The character ? may be used instead of * to match a single wildcard character instead of an unlimited number of characters. A subquery that matches a single wildcard character might look like this: <strong>fulltext:(Yam?n)</strong>
						p
							|<strong>r_byline</strong>
							br
							|Matches queries against article bylines. For example the expression <strong>r_byline:(+Ahmed -Mohamed)</strong> matches documents whose byline includes the term 'Ahmed' (as specified by the + symbol), but does not include the term 'Mohamed' (as denoted by the - symbol)
						p
							|<strong>date</strong>
							br
							|Matches articles published within a specific date range. For example the expression <strong>date:[2012-01-01 TO 2012-12-31]</strong> matches articles published between the range 2012-01-01 - 2012-12-31 (inclusive: as specified by the use of square brackets [ ])
						p
							|<strong>indexed_date</strong>
							br
							|Matches articles indexed in our database within a specific date range. For example the expression <strong>date:{2012-01-01 TO 2012-12-31}</strong> matches articles published between the range 2012-01-01 - 2012-12-31 (exclusive: as specified by the use of curly brackets { }). Curly and square brackets can be combined

	div(class='container' ng-show='showResults')
		div(class='row')
			div(class='col-xs-12 col-md-12')
				ul(class='media-list results')
					h4(class='header')
						|{{meta}}
					li(class='media {{result.lang}}' ng-repeat='result in results')
						div(class='media-body')
							h4(class='media-heading {{result.lang}}')
								a(href='' ng-click='fetchDoc(result.hash)')
									|{{result.title}}
							.post-meta-summary
								a(class='post-meta-link-author' href='#')
									|{{result.url}}
								span(class='post-meta-supplemental')
									span(class='text-warning' am-time-ago='result.date')
									span(class='text-warning')
										|<strong>{{result.byline}}</strong>
							p(class='result-body' ng-bind-html='result.excerpt | html')
				ul(class='pagination pagination-sm')
					li(ng-repeat='page in pages')
						a(href='' ng-click='getResults(page)')
							|{{page}}

	div(class='container' ng-show='showDoc')
		div(class='row')
			div(class='col-xs-12 col-md-12')
				div(class='{{document.lang}}')
					h2(class='article-heading')
						|{{document.title}}
					.post-meta-summary
						a(class='post-meta-link-author' href='#')
							|{{document.url}}
						span(class='post-meta-supplemental')
							span(class='text-warning' am-time-ago='document.date')
							span(class='text-warning')
								|<strong>{{document.byline}}</strong>
					p(class='article-body' ng-bind-html='document.main | html')
