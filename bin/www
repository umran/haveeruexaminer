#!/usr/bin/env node
var debug = require('debug')('haveeruexaminer:server');
var serverObject = require("../dependencies/serverobject");
var httpd = serverObject.httpd;
var mongod = serverObject.mongod;

httpd.on('error', onError);
httpd.on('listening', onListening);

mongod.on('error', console.error.bind(console, 'Database connection error:'));
mongod.once('open', function callback () { debug('Database reachable and ready to serve requests') });

/**
 * Event listener for HTTP server "error" event.
 */

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  var bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

/**
 * Event listener for HTTP server "listening" event.
 */

function onListening() {
  var addr = httpd.address();
  var bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  debug('Listening on ' + bind);
}